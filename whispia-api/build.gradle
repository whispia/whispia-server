plugins {
    id 'org.jetbrains.kotlin.kapt'
}

group = 'com.whispia.api'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

def mockkVersion = '1.13.8'
def querydslVersion = '5.0.0'
def hybernateTypesVersion = '2.21.1'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "com.vladmihalcea:hibernate-types-60:${hybernateTypesVersion}"

    // test
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation "io.mockk:mockk:${mockkVersion}"

    // Testcontainers
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    runtimeOnly 'org.postgresql:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // querydsl
    implementation("com.querydsl:querydsl-jpa:${querydslVersion}:jakarta")
    kapt("com.querydsl:querydsl-apt:${querydslVersion}:jakarta")

    // redis cache
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.boot:spring-boot-starter-cache")

    implementation(project(":whispia-common"))
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

kapt {
    generateStubs = true
}

tasks.named('test') {
    useJUnitPlatform()
}
